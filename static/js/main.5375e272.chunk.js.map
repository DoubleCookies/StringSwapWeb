{"version":3,"sources":["components/replaceText/ReplaceText.tsx","components/addPrefix/AddPrefix.tsx","components/fileNames/FileNames.tsx","components/navboxGenerator/NavboxGenerator.tsx","components/quoteReplacement/QuoteReplacement.tsx","components/galleryGenerator/GalleryGenerator.tsx","App.tsx","index.tsx"],"names":["ReplaceText","props","state","startValue","replaceStart","replaceFinish","finishValue","this","style","display","flexDirection","flexBasis","className","placeholder","onChange","updateStartValue","bind","rows","margin","handleReplaceStart","type","value","handleReplaceFinish","readOnly","event","setState","target","replaceText","resultString","replaceAll","React","Component","AddPrefix","prefix","updatePrefix","stringArray","split","FileNames","filter","item","length","index","join","NavboxGenerator","stringsArray","substring","QuoteReplacement","startQuote","indexOf","replace","GalleryGenerator","name","startNumber","finishNumber","extension","alignSelf","updateName","updateStartNumber","updateFinishNumber","updateExtension","i","trim","App","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5375e272.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface MyState {\r\n  startValue: string,\r\n  finishValue: string,\r\n  replaceStart: string,\r\n  replaceFinish: string\r\n}\r\n\r\nclass ReplaceText extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startValue: '',\r\n      replaceStart: '',\r\n      replaceFinish: '',\r\n      finishValue: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {replaceStart, replaceFinish} = this.state;\r\n    return (\r\n      <form>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Текст для замены:\r\n            </label>\r\n            <textarea className=\"form-text-area\"\r\n                      placeholder=\"Введите текст для замены\"\r\n                      onChange={this.updateStartValue.bind(this)}\r\n                      rows={10}/>\r\n            <div style={{ margin: 10 }}>\r\n              <label>Что</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.handleReplaceStart.bind(this)}\r\n                     type=\"text\"\r\n                     value={replaceStart}/>\r\n              <br/>\r\n              <label>На что</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.handleReplaceFinish.bind(this)}\r\n                     type=\"text\"\r\n                     value={replaceFinish}/>\r\n            </div>\r\n          </div>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Результат:\r\n            </label>\r\n            <textarea className=\"form-text-area\" value={this.state.finishValue} readOnly={true} rows={10}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  private async updateStartValue(event: any) {\r\n    await this.setState({\r\n      startValue: event.target.value\r\n    });\r\n    this.replaceText();\r\n\r\n  }\r\n\r\n  private async handleReplaceStart(event: any) {\r\n    await this.setState({\r\n      replaceStart: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private async handleReplaceFinish(event: any) {\r\n    await this.setState({\r\n      replaceFinish: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private replaceText() {\r\n    const { startValue, replaceStart, replaceFinish } = this.state;\r\n    if (replaceStart) {\r\n      const resultString = startValue.replaceAll(replaceStart, replaceFinish);\r\n      this.setState({\r\n        finishValue: resultString\r\n      })\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReplaceText;","import React from \"react\";\r\n\r\ninterface MyState {\r\n  startValue: string,\r\n  prefix: string,\r\n  finishValue: string\r\n}\r\n\r\nclass AddPrefix extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startValue: '',\r\n      prefix: '',\r\n      finishValue: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {prefix, finishValue} = this.state;\r\n    return (\r\n      <form>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Исходный текст\r\n            </label>\r\n            <textarea className=\"form-text-area\"\r\n                      placeholder=\"Введите текст для замены\"\r\n                      onChange={this.updateStartValue.bind(this)}\r\n                      rows={10}/>\r\n            <div style={{ margin: 10 }}>\r\n              <label>Префикс</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.updatePrefix.bind(this)}\r\n                     type=\"text\"\r\n                     value={prefix}/>\r\n            </div>\r\n          </div>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Результат:\r\n            </label>\r\n            <textarea className=\"form-text-area\" value={finishValue} readOnly={true} rows={10}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  private async updateStartValue(event: any) {\r\n    await this.setState({\r\n      startValue: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private async updatePrefix(event: any) {\r\n    await this.setState({\r\n      prefix: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private replaceText() {\r\n    const { startValue, prefix } = this.state;\r\n    if (prefix) {\r\n      let resultString = '';\r\n      const stringArray = startValue.split('\\n');\r\n      for (const str of stringArray) {\r\n        resultString += prefix + str + \"\\n\";\r\n      }\r\n      this.setState({\r\n        finishValue: resultString\r\n      })\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddPrefix;","import React from \"react\";\r\n\r\ninterface MyState {\r\n  startValue: string,\r\n  finishValue: string\r\n}\r\n\r\nclass FileNames extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startValue: '',\r\n      finishValue: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {finishValue} = this.state;\r\n    return (\r\n      <form>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Исходный текст\r\n            </label>\r\n            <textarea className=\"form-text-area\"\r\n                      placeholder=\"Введите текст для замены\"\r\n                      onChange={this.updateStartValue.bind(this)}\r\n                      rows={10}/>\r\n          </div>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Результат:\r\n            </label>\r\n            <textarea className=\"form-text-area\" value={finishValue} readOnly={true} rows={10}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  private async updateStartValue(event: any) {\r\n    await this.setState({\r\n      startValue: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private replaceText() {\r\n    const { startValue } = this.state;\r\n    if (!startValue) {\r\n      return;\r\n    }\r\n    const stringsArray = startValue.split('\\n').filter(item => item.length > 0).filter((item, index) => index % 2 === 1);\r\n    const resultString = stringsArray.join('\\n');\r\n    this.setState({\r\n      finishValue: resultString\r\n    })\r\n  }\r\n}\r\n\r\nexport default FileNames;","import React from \"react\";\r\n\r\ninterface MyState {\r\n  startValue: string,\r\n  finishValue: string\r\n}\r\n\r\nclass NavboxGenerator extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startValue: '',\r\n      finishValue: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {finishValue} = this.state;\r\n    return (\r\n      <form>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Исходный текст\r\n            </label>\r\n            <textarea className=\"form-text-area\"\r\n                      placeholder=\"Введите текст для замены\"\r\n                      onChange={this.updateStartValue.bind(this)}\r\n                      rows={10}/>\r\n          </div>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Результат:\r\n            </label>\r\n            <textarea className=\"form-text-area\" value={finishValue} readOnly={true} rows={10}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  private async updateStartValue(event: any) {\r\n    await this.setState({\r\n      startValue: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private replaceText() {\r\n    const { startValue } = this.state;\r\n    const stringsArray = startValue.split('\\n').filter(item => item.length > 0);\r\n    let resultString = '';\r\n    for (const str of stringsArray) {\r\n      resultString += '[[' + str + ']] • ';\r\n    }\r\n    resultString = resultString.substring(0, resultString.length - 3);\r\n    this.setState({\r\n      finishValue: resultString\r\n    })\r\n  }\r\n}\r\n\r\nexport default NavboxGenerator;","import React from \"react\";\r\n\r\ninterface MyState {\r\n  startValue: string,\r\n  finishValue: string\r\n}\r\n\r\nclass QuoteReplacement extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startValue: '',\r\n      finishValue: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {finishValue} = this.state;\r\n    return (\r\n      <form>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Исходный текст\r\n            </label>\r\n            <textarea className=\"form-text-area\"\r\n                      placeholder=\"Введите текст для замены\"\r\n                      onChange={this.updateStartValue.bind(this)}\r\n                      rows={10}/>\r\n          </div>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Результат:\r\n            </label>\r\n            <textarea className=\"form-text-area\" value={finishValue} readOnly={true} rows={10}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  private async updateStartValue(event: any) {\r\n    await this.setState({\r\n      startValue: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private replaceText() {\r\n    const { startValue } = this.state;\r\n    let resultString = startValue;\r\n    let startQuote = true;\r\n    if (!startValue) {\r\n      return\r\n    }\r\n    while (resultString.indexOf('\"') > -1) {\r\n      resultString = resultString.replace('\"', startQuote ? '«' : '»');\r\n      startQuote = !startQuote;\r\n    }\r\n    this.setState({\r\n      finishValue: resultString\r\n    })\r\n  }\r\n}\r\n\r\nexport default QuoteReplacement;","import React from \"react\";\r\n\r\ninterface MyState {\r\n  name: string,\r\n  startNumber: number,\r\n  finishNumber: number,\r\n  extension: string,\r\n  finishValue: string\r\n}\r\n\r\nclass GalleryGenerator extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startNumber: 0,\r\n      finishNumber: 0,\r\n      extension: '',\r\n      finishValue: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {name, extension, finishValue} = this.state;\r\n    return (\r\n      <form>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%', alignSelf: 'flex-end' }}>\r\n            <div style={{ margin: 10 }}>\r\n              <label>Название</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.updateName.bind(this)}\r\n                     type=\"text\"\r\n                     value={name}/>\r\n              <br/>\r\n              <label>Старт. номер</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.updateStartNumber.bind(this)}\r\n                     type=\"text\"\r\n              />\r\n              <br/>\r\n              <label>Фин. номер</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.updateFinishNumber.bind(this)}\r\n                     type=\"text\"\r\n              />\r\n              <br/>\r\n              <label>Расширение</label>\r\n              <input className=\"form-input\"\r\n                     onChange={this.updateExtension.bind(this)}\r\n                     type=\"text\"\r\n                     value={extension}/>\r\n            </div>\r\n          </div>\r\n          <div style={{ flexDirection: 'column', flexBasis: '50%' }}>\r\n            <label className=\"form-label\">\r\n              Результат:\r\n            </label>\r\n            <textarea className=\"form-text-area\" value={finishValue} readOnly={true} rows={10}/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  private async updateName(event: any) {\r\n    await this.setState({\r\n      name: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private async updateStartNumber(event: any) {\r\n    this.setState({\r\n      startNumber: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private async updateFinishNumber(event: any) {\r\n    await this.setState({\r\n      finishNumber: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private async updateExtension(event: any) {\r\n    await this.setState({\r\n      extension: event.target.value\r\n    });\r\n    this.replaceText();\r\n  }\r\n\r\n  private replaceText() {\r\n    const { name, startNumber, finishNumber, extension } = this.state;\r\n    if (name.length === 0 || !startNumber || !finishNumber || extension.length === 0) {\r\n      return;\r\n    }\r\n    let resultString = '';\r\n    for (let i = startNumber; i < finishNumber; i++) {\r\n      resultString += name.trim() + ' ' + i + '.' + extension + '\\n';\r\n    }\r\n    this.setState({\r\n      finishValue: resultString\r\n    })\r\n  }\r\n}\r\n\r\nexport default GalleryGenerator;","import React from 'react';\nimport './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport ReplaceText from \"./components/replaceText/ReplaceText\";\nimport AddPrefix from \"./components/addPrefix/AddPrefix\";\nimport FileNames from \"./components/fileNames/FileNames\";\nimport NavboxGenerator from \"./components/navboxGenerator/NavboxGenerator\";\nimport QuoteReplacement from \"./components/quoteReplacement/QuoteReplacement\";\nimport GalleryGenerator from \"./components/galleryGenerator/GalleryGenerator\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div>\n          String Swap ಠ~ಠ\n        </div>\n      </header>\n      <main className=\"main-content\">\n        <Tabs>\n          <TabList>\n            <Tab>Замена текста</Tab>\n            <Tab>Добавление префикса</Tab>\n            <Tab>Список файлов</Tab>\n            <Tab>Генератор навбоксов</Tab>\n            <Tab>Замена кавычек</Tab>\n            <Tab>Генератор галерей</Tab>\n          </TabList>\n          <TabPanel>\n            <ReplaceText/>\n          </TabPanel>\n          <TabPanel>\n            <AddPrefix/>\n          </TabPanel>\n          <TabPanel>\n            <FileNames/>\n          </TabPanel>\n          <TabPanel>\n            <NavboxGenerator/>\n          </TabPanel>\n          <TabPanel>\n            <QuoteReplacement/>\n          </TabPanel>\n          <TabPanel>\n            <GalleryGenerator/>\n          </TabPanel>\n        </Tabs>\n      </main>\n      <footer className=\"footer-block\">\n        <div>2021-2022 <span role=\"img\" aria-label=\"cookieEmoji\">🍪</span></div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}